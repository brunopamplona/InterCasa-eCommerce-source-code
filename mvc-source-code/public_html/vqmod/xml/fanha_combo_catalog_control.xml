<modification>
	<id>Combo in catalog controller</id>
	<version>1.5.x</version>
	<vqmver>2.3.x</vqmver>
	<author>Fanha Giang</author>
	<file name="catalog/controller/checkout/cart.php">
		<operation error="skip">
			<search position="after"><![CDATA[class ControllerCheckoutCart extends Controller {]]></search>
			<add><![CDATA[
	public function addCombo() {
		$this->language->load('checkout/combo');
		
		$json = array();
		
		if (isset($this->request->post['combo_id'])) {
			$combo_id = $this->request->post['combo_id'];
		} else {
			$combo_id = 0;
		}
		
		if (isset($this->request->post['combo_quantity'])) {
			$combo_quantity = $this->request->post['combo_quantity'];
		} else {
			$combo_quantity = 1;
		}
		
		if (isset($this->request->post['option'])) {
			$post_option = array_filter($this->request->post['option']);
		} else {
			$post_option = array();	
		}
			
		if (isset($this->request->post['profile'])) {
			$post_profile = array_filter($this->request->post['profile']);
		} else {
			$post_profile = array();	
		}
			
		$this->load->model('catalog/combo');
		
		$ps = $this->model_catalog_combo->getComboProducts($combo_id);
	
		$this->load->model('catalog/product');
		
		$add_data = array();
		
		foreach($ps as $p) {
			$product_info = $this->model_catalog_product->getProduct($p['product_id']);
			if ($product_info) {
				$option = array();	
				
				$product_options = $this->model_catalog_product->getProductOptions($p['product_id']);
				
				foreach ($product_options as $product_option) {
					
					if ($product_option['required'] && empty($post_option[$product_option['product_option_id']])) {
						$json['error']['option'][$product_option['product_option_id']] = sprintf($this->language->get('error_required'), $product_option['name']);
						$json['error']['combo_id'] = $combo_id;
					} else if (!empty($post_option[$product_option['product_option_id']])){
						$option[$product_option['product_option_id']] = $post_option[$product_option['product_option_id']];
					}
				}
				
				if (empty($post_profile[$p['product_id']])) {
					$post_profile[$p['product_id']] = 0;
				}
				
				//~ 1.5.6
				if (method_exists($this->model_catalog_product, 'getProfiles')) {
					$product_profiles = $this->model_catalog_product->getProfiles($p['product_id']);
            
					if ($product_profiles) {
						$profile_ids = array();
					
						foreach ($product_profiles as $profile) {
							$profile_ids[] = $profile['profile_id'];
						}
					
						if (!in_array($post_profile[$p['product_id']], $profile_ids)) {
							$json['error']['profile'][$p['product_id']] = $this->language->get('error_profile_required');
						}
					}
				}	
				//~~ 1.5.6
			
				$add_data[] = array (
					'product_id' => $p['product_id'],
					'quantity' => $p['quantity'],
					'option' => $option,
					'profile' => $post_profile[$p['product_id']],
				);
			}
		}

		if (!$json) {
			$quantity = 0;
			foreach($add_data as $add)
			{
				if (method_exists($this->model_catalog_product, 'getProfiles')) {
					$this->cart->add($add['product_id'], $combo_quantity * $add['quantity'], $add['option'], $add['profile']);
				} else {
					$this->cart->add($add['product_id'], $combo_quantity * $add['quantity'], $add['option']);				
				}
				$quantity += $combo_quantity * $add['quantity'];
			}

			$json['success'] = sprintf($this->language->get('text_success'), $quantity, $this->url->link('checkout/cart'));
			
			unset($this->session->data['shipping_method']);
			unset($this->session->data['shipping_methods']);
			unset($this->session->data['payment_method']);
			unset($this->session->data['payment_methods']);
			
			// Totals
			$this->load->model('setting/extension');
			
			$total_data = array();					
			$total = 0;
			$taxes = $this->cart->getTaxes();
			
			// Display prices
			if (($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) {
				$sort_order = array(); 
				
				$results = $this->model_setting_extension->getExtensions('total');
				
				foreach ($results as $key => $value) {
					$sort_order[$key] = $this->config->get($value['code'] . '_sort_order');
				}
				
				array_multisort($sort_order, SORT_ASC, $results);
				
				foreach ($results as $result) {
					if ($this->config->get($result['code'] . '_status')) {
						$this->load->model('total/' . $result['code']);
			
						$this->{'model_total_' . $result['code']}->getTotal($total_data, $total, $taxes);
					}
					
					$sort_order = array(); 
				  
					foreach ($total_data as $key => $value) {
						$sort_order[$key] = $value['sort_order'];
					}
		
					array_multisort($sort_order, SORT_ASC, $total_data);			
				}
			}
			
			$json['total'] = sprintf($this->language->get('text_items'), $this->cart->countProducts() + (isset($this->session->data['vouchers']) ? count($this->session->data['vouchers']) : 0), $this->currency->format($total));
		} else {
			$json['error']['warning'] = $this->language->get('text_error');
			$json['redirect'] = str_replace('&amp;', '&', $this->url->link('product/combo', 'combo_id=' . $json['error']['combo_id']));
		}
		
		$this->response->setOutput(json_encode($json));		
	}
			]]></add>
		</operation>
	</file>
	<file name="catalog/controller/product/product.php">
		<operation>
			<search position="before" index="1"><![CDATA[$this->children = array(]]></search>
			<add><![CDATA[
		$this->language->load('product/combo');
		$this->data['tab_combo'] = $this->language->get('tab_combo');
			]]></add>
		</operation>
		<operation>
			<search position="after" index="1"><![CDATA[$this->children = array(]]></search>
			<add><![CDATA[
				'module/combo',
			]]></add>
		</operation>
	</file>
	<file name="catalog/controller/common/header.php">
		<operation>
			<search position="before"><![CDATA[if (file_exists(DIR_TEMPLATE]]></search>
			<add><![CDATA[
		if ($this->config->get('combo_stick_to_top')) {
			$this->language->load('product/combo');

			$this->data['categories'][] = array(
				'name'     => $this->language->get('heading_title'),
				'children' => array(),
				'column'   => $category['column'] ? $category['column'] : 1,
				'href'     => $this->url->link('product/combos', ''),
			);		
		}
			]]></add>
		</operation>
	</file>
	<file name="catalog/controller/module/category.php">
		<operation>
			<search position="before"><![CDATA[if (file_exists(DIR_TEMPLATE]]></search>
			<add><![CDATA[
		if ($this->config->get('combo_append_category')) {
			$this->language->load('product/combo');

			$this->load->model('catalog/combo');
			$combos_total = $this->model_catalog_combo->countActiveCombos();
			
			$this->data['categories'][] = array(
				'name'     => $this->language->get('heading_title') . ($this->config->get('config_product_count') ? ' (' . $combos_total . ')' : ''),
				'children' => array(),
				'category_id'   => -1,
				'href'     => $this->url->link('product/combos', ''),
			);
			
			if (isset($this->request->get['route']) && $this->request->get['route'] == 'product/combos') {
				$this->data['category_id'] = -1;
			}
		}
			]]></add>
		</operation>
	</file>
</modification>